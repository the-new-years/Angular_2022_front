{"ast":null,"code":"import { Login } from '../login/login.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.admin = false;\n      this.prof = false;\n      this.etudiant = false;\n      this.role = '';\n      this.name = '';\n      this.uri = \"http://localhost:8010/api/auth\";\n    } //uri = \"https://mbdsangularback.herokuapp.com/api/auth\"\n\n\n    authentification(login) {\n      console.log(\"Authentification...\");\n      return this.http.post(this.uri + '/login', login);\n    }\n\n    register(login) {\n      console.log(\"Enregistrement en cours...\");\n      return this.http.post(this.uri + '/register', login);\n    }\n\n    logout(login) {\n      console.log(\"deconnexion en cours...\");\n      return this.http.post(this.uri + '/logout', login);\n    } // exemple d'utilisation :\n    // isAdmin.then(admin => { console.log(\"administrateur : \" + admin);})\n\n\n    isAdmin() {\n      return new Promise((resolve, reject) => {\n        resolve(this.admin);\n      });\n    }\n\n    isProf() {\n      return new Promise((resolve, reject) => {\n        resolve(this.prof);\n      });\n    }\n\n    isEtudiant() {\n      return new Promise((resolve, reject) => {\n        resolve(this.etudiant);\n      });\n    }\n\n    roleUtilisateur() {\n      return new Promise((resolve, reject) => {\n        resolve(this.role);\n      });\n    }\n\n    setRole(newRole) {\n      if (newRole == 'Admin') {\n        this.admin = newRole;\n      }\n\n      if (newRole == 'Etudiant') {\n        this.etudiant = newRole;\n      }\n\n      if (newRole == 'Prof') {\n        this.prof = newRole;\n      }\n\n      this.role = newRole;\n    }\n\n    setName(name) {\n      this.name = name;\n    }\n\n    getUserInfo() {\n      let user = new Login();\n      user.name = this.name;\n      user.role = this.role;\n      return user;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}